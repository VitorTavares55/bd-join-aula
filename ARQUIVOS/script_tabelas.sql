DROP DATABASE IF EXISTS banco; 
CREATE DATABASE banco;
USE banco;

CREATE TABLE ESTADO (
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,SIGLA CHAR(2) NOT NULL 
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
,CONSTRAINT ESTADO_PK PRIMARY KEY (ID)
,CONSTRAINT ESTADO_NOME_U UNIQUE(NOME) 
,CONSTRAINT ESTADO_SIGLA_U UNIQUE(SIGLA)
,CONSTRAINT ESTADO_STAUTS_AI CHECK (STATUS IN('A','I'))
);

CREATE TABLE CIDADE(
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,ESTADO_ID INT NOT NULL 
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,CONSTRAINT CIDADE_PK PRIMARY KEY (ID) 
,CONSTRAINT CIDADE_EST_FK FOREIGN KEY (ESTADO_ID) REFERENCES ESTADO (ID)
,CONSTRAINT CIDADE_STATUS_AI CHECK (STATUS IN ('A','I'))
,CONSTRAINT CIDADE_UNIQUE UNIQUE(NOME,ESTADO_ID)
);

CREATE TABLE FORNECEDOR (
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,APELIDO VARCHAR(100) 
,CPF_CNPJ VARCHAR(18) NOT NULL 
,ENDERECO VARCHAR(100) NOT NULL 
,ENDERECO_NUMERO VARCHAR(20) NOT NULL 
,ENDERECO_COMPLEMENTO VARCHAR(100)  
,ENDERECO_BAIRRO VARCHAR(100) NOT NULL 
,CEP VARCHAR(10) NOT NULL 
,FONE VARCHAR(15) 
,FONE_D VARCHAR(15)
,CONTATO VARCHAR(100)
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,DATA_NASCIMENTO DATE 
,EMAIL VARCHAR(100) 
,CIDADE_ID INT NOT NULL 
,CONSTRAINT FORNECEDOR_PK PRIMARY KEY (ID)
,CONSTRAINT FORNECEDOR_CID_FK FOREIGN KEY (CIDADE_ID) REFERENCES CIDADE (ID)
,CONSTRAINT FORNECEDOR_CPFCNPJ_U UNIQUE (CPF_CNPJ)
,CONSTRAINT FORNECEDOR_STATUS CHECK(STATUS IN('A','I'))
);

CREATE TABLE CLIENTE (
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,APELIDO VARCHAR(100) 
,CPF_CNPJ VARCHAR(18) NOT NULL 
,ENDERECO VARCHAR(100) NOT NULL 
,ENDERECO_NUMERO VARCHAR(20) NOT NULL 
,ENDERECO_COMPLEMENTO VARCHAR(100)  
,ENDERECO_BAIRRO VARCHAR(100) NOT NULL 
,CEP VARCHAR(10) NOT NULL 
,FONE VARCHAR(15) 
,FONE_D VARCHAR(15)
,CONTATO VARCHAR(100)
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,DATA_NASCIMENTO DATE 
,EMAIL VARCHAR(100) 
,CIDADE_ID INT NOT NULL 
,CONSTRAINT CLIENTE_PK PRIMARY KEY (ID)
,CONSTRAINT CLIENTE_CID_FK FOREIGN KEY (CIDADE_ID) REFERENCES CIDADE (ID)
,CONSTRAINT CLIENTE_CPFCNPJ_U UNIQUE (CPF_CNPJ)
,OCUPACAO VARCHAR(100)
,CONSTRAINT CLIENTE_STATUS CHECK(STATUS IN('A','I'))
);

CREATE TABLE FUNCIONARIO (
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,APELIDO VARCHAR(100) 
,CPF CHAR(14) NOT NULL 
,ENDERECO VARCHAR(100) NOT NULL 
,ENDERECO_NUMERO VARCHAR(20) NOT NULL 
,ENDERECO_COMPLEMENTO VARCHAR(100)  
,ENDERECO_BAIRRO VARCHAR(100) NOT NULL 
,CEP VARCHAR(10) NOT NULL 
,FONE VARCHAR(15) 
,FONE_D VARCHAR(15)
,CONTATO VARCHAR(100)
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,DATA_NASCIMENTO DATE 
,EMAIL VARCHAR(100) 
,CIDADE_ID INT NOT NULL 
,CONSTRAINT FUNCIONARIO_PK PRIMARY KEY (ID)
,CONSTRAINT FUNCIONARIO_CID_FK FOREIGN KEY (CIDADE_ID) REFERENCES CIDADE (ID)
,CONSTRAINT FUNCIONARIO_CPF CHECK (LENGTH(CPF) = 14)
,CONSTRAINT FUNCIONARIO_CPF_U UNIQUE (CPF)
,CONSTRAINT FUNCIONARIO_STATUS CHECK(STATUS IN('A','I'))
);

CREATE TABLE CATEGORIA (
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,DESCRICAO VARCHAR(2000) 
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,CONSTRAINT CATEGORIA_ID PRIMARY KEY (ID) 
,CONSTRAINT CATEGORIA_STATUS_AI CHECK(STATUS IN('A','I'))
);

CREATE TABLE TIPO (
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,DESCRICAO VARCHAR(2000) NOT NULL 
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,CONSTRAINT TIPO_ID PRIMARY KEY (ID) 
,CONSTRAINT TIPO_STATUS_AI CHECK(STATUS IN('A','I'))
);

CREATE TABLE LINHA (
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,DESCRICAO VARCHAR(2000) 
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,CONSTRAINT LINHA_ID PRIMARY KEY (ID) 
,CONSTRAINT LINHA_STATUS_AI CHECK(STATUS IN('A','I'))
);

CREATE TABLE MARCA(
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,DESCRICAO VARCHAR(100)
,STATUS CHAR DEFAULT 'A' NOT NULL
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
,CONSTRAINT MAR_PK PRIMARY KEY (ID)
,CONSTRAINT MAR_STATUS CHECK(STATUS IN('A','I'))
);

CREATE TABLE UMEDIDA(
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,SIGLA VARCHAR(10) NOT NULL UNIQUE
,STATUS CHAR DEFAULT 'A' NOT NULL
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
,CONSTRAINT UMEDIDA_PK PRIMARY KEY (ID)
,CONSTRAINT UMEDIDA_STATUS CHECK(STATUS IN('A','I')) 
);

CREATE TABLE PRODUTO( 
ID INT NOT NULL auto_increment
,NOME VARCHAR(100) NOT NULL 
,DESCRICAO VARCHAR(2000) 
,CONTEUDO DECIMAL(15,2)
,UNIDADE INT
,PRECO_CUSTO DECIMAL(12,2) NOT NULL 
,PRECO_VENDA DECIMAL(12,2) NOT NULL 
,STATUS CHAR DEFAULT 'A' NOT NULL
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,ESTOQUE INT DEFAULT 0 NOT NULL 
,CONTROLA_LOTE CHAR NOT NULL
,UMEDIDA_ID INT NOT NULL
,MARCA_ID INT NOT NULL
,CONSTRAINT PRODUTO_ID PRIMARY KEY (ID)
,CONSTRAINT PROD_FK_UMEDIDA FOREIGN KEY (UMEDIDA_ID) REFERENCES UMEDIDA (ID)
,CONSTRAINT PROD_FK_MARCA FOREIGN KEY (MARCA_ID) REFERENCES MARCA (ID)
,CONSTRAINT PRODUTO_STATUS_AI CHECK(STATUS IN('A','I'))
,CONSTRAINT PRODUTO_CONTLOT CHECK(CONTROLA_LOTE IN('S','N'))
);

CREATE TABLE LOTE(
ID INT NOT NULL auto_increment
,ESTOQUE INT
,DATA_VENCIMENTO DATETIME NOT NULL 
,PRODUTO_ID INT NOT NULL
,CONSTRAINT LOTE_PK PRIMARY KEY (ID) 
,CONSTRAINT LOTE_PROD_FK FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTO (ID)
,CONSTRAINT LOTE_UNICO UNIQUE(PRODUTO_ID,DATA_VENCIMENTO)
);

CREATE TABLE PRODUTO_CATEGORIA (
PRODUTO_ID INT NOT NULL
,CATEGORIA_ID INT NOT NULL 
,CONSTRAINT PRODCAT_PK PRIMARY KEY (PRODUTO_ID,CATEGORIA_ID) 
,CONSTRAINT PRODCAT_PRODUTO_FK FOREIGN KEY(PRODUTO_ID) REFERENCES PRODUTO (ID)
,CONSTRAINT PRODCAT_CATEGORIA_FK FOREIGN KEY (CATEGORIA_ID) REFERENCES CATEGORIA (ID)
);

CREATE TABLE LINHA_CATEGORIA(
LINHA_ID INT NOT NULL
,CATEGORIA_ID INT NOT NULL
,CONSTRAINT LINCAT_PK PRIMARY KEY (LINHA_ID, CATEGORIA_ID)
,CONSTRAINT LINCAT_FK_LINHA FOREIGN KEY (LINHA_ID) REFERENCES LINHA (ID)
,CONSTRAINT LINCAT_FK_CATEGORIA FOREIGN KEY (CATEGORIA_ID) REFERENCES CATEGORIA (ID)
);

CREATE TABLE PRODUTO_TIPO (
PRODUTO_ID INT NOT NULL
,TIPO_ID INT NOT NULL 
,CONSTRAINT PRODTIP_PK PRIMARY KEY (PRODUTO_ID,TIPO_ID) 
,CONSTRAINT PRODTIP_PRODUTO_FK FOREIGN KEY(PRODUTO_ID) REFERENCES PRODUTO (ID)
,CONSTRAINT PRODTIP_TIPO_FK FOREIGN KEY (TIPO_ID) REFERENCES TIPO (ID)
);

CREATE TABLE BAIXA_PRODUTO (
ID INT NOT NULL auto_increment
,DESCRICAO VARCHAR(100) NOT NULL 
,QUANTIDADE INT NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,FUNCIONARIO_ID INT NOT NULL 
,PRODUTO_ID INT NOT NULL 
,DATA_VENCIMENTO DATETIME NOT NULL
,CONSTRAINT BAIXAPROD_ID PRIMARY KEY (ID) 
,CONSTRAINT BAIXAPROD_FUN_FK FOREIGN KEY (FUNCIONARIO_ID) REFERENCES FUNCIONARIO (ID)
,CONSTRAINT BAIXAPROD_PROD_FK FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTO (ID)
);

CREATE TABLE  FPAGAMENTO (
ID INT NOT NULL auto_increment
,DESCRICAO VARCHAR(100) NOT NULL 
,QTDE_PARCELAS INT NOT NULL 
,ENTRADA CHAR NOT NULL 
,STATUS CHAR DEFAULT 'A' NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,CONSTRAINT FPAGAMENTO_PK PRIMARY KEY (ID)
,CONSTRAINT FPAGAMENTO_STATUS CHECK(STATUS IN('A','I'))
);

CREATE TABLE VENDA (
ID INT NOT NULL auto_increment
,TIPO CHAR(2) NOT NULL
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,CLIENTE_ID INT NOT NULL 
,FUNCIONARIO_ID INT NOT NULL 
,FPAGAMENTO_ID INT NOT NULL 
,TOTAL DECIMAL(12,2) 
,CONSTRAINT VENDA_PK PRIMARY KEY (ID) 
,CONSTRAINT VENDA_CLIENTE_FK FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (ID)
,CONSTRAINT VENDA_FUNCIONARIO_FK FOREIGN KEY (FUNCIONARIO_ID) REFERENCES FUNCIONARIO (ID)
,CONSTRAINT VENDA_TIPO CHECK(TIPO IN('PA','PF','VA','VF'))
);

CREATE TABLE IVENDA (
VENDA_ID INT NOT NULL 
,PRODUTO_ID INT NOT NULL 
,QUANTIDADE INT NOT NULL 
,PRECO_UNIDADE DECIMAL(12,2) NOT NULL 
,DESCONTO DECIMAL(12,2) 
,CONSTRAINT IVENDA_PK PRIMARY KEY (VENDA_ID,PRODUTO_ID)
,CONSTRAINT IVENDA_PROD_FK FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTO (ID)
,CONSTRAINT IVENDA_VEN_FK FOREIGN KEY (VENDA_ID) REFERENCES VENDA (ID)
);

CREATE TABLE COMPRA (
ID INT NOT NULL auto_increment
,TIPO CHAR(2) NOT NULL 
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,FORNECEDOR_ID INT NOT NULL 
,FUNCIONARIO_ID INT NOT NULL 
,FPAGAMENTO_ID INT NOT NULL 
,DESCONTO DECIMAL(12,2)  
,ACRESCIMO DECIMAL(12,2)  
,TOTAL DECIMAL(12,2) 
,CONSTRAINT COMPRA_PK PRIMARY KEY (ID) 
,CONSTRAINT COMPRA_FORNECEDOR_FK FOREIGN KEY (FORNECEDOR_ID) REFERENCES FORNECEDOR (ID)
,CONSTRAINT COMPRA_FUNCIONARIO_FK FOREIGN KEY  (FUNCIONARIO_ID) REFERENCES FUNCIONARIO (ID)
,CONSTRAINT COMPRA_TIPO CHECK(TIPO IN('PA','PF','CA','CF'))
);

CREATE TABLE ICOMPRA (
COMPRA_ID INT NOT NULL 
,PRODUTO_ID INT NOT NULL 
,QUANTIDADE INT NOT NULL 
,DESCONTO DECIMAL(12,2) 
,CONSTRAINT ICOMPRA_PK PRIMARY KEY (COMPRA_ID,PRODUTO_ID)
,CONSTRAINT ICOMPRA_PROD_FK FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTO (ID)
,CONSTRAINT ICOMPRA_COM_FK FOREIGN KEY (COMPRA_ID) REFERENCES COMPRA (ID)
);

CREATE TABLE CRECEBER (
ID INT NOT NULL auto_increment
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,VENDA_ID INT 
,FPAGAMENTO_ID INT NOT NULL 
,QTDE_PARC_PENDENTE INT
,CONSTRAINT CRECEBER_PK PRIMARY KEY (ID) 
,CONSTRAINT CREC_VEN_FK FOREIGN KEY (VENDA_ID) REFERENCES VENDA (ID)
,CONSTRAINT CREC_FPAG_FK FOREIGN KEY (FPAGAMENTO_ID) REFERENCES FPAGAMENTO (ID)
);

CREATE TABLE PARCELA_RECEBER(
ID INT NOT NULL auto_increment
,VALOR DECIMAL(12,2) NOT NULL 
,QUITADO DECIMAL(12,2) DEFAULT 0
,JUROS DECIMAL(12,2) DEFAULT 0
,DESCONTO DECIMAL(12,2) DEFAULT 0
,VENCIMENTO DATETIME
,CRECEBER_ID INT NOT NULL
,CONSTRAINT PARCELA_RECEBER_PK PRIMARY KEY (ID)
,CONSTRAINT PARREC_CREC_FK FOREIGN KEY (CRECEBER_ID) REFERENCES CRECEBER (ID)
);

CREATE TABLE RECEBIMENTO (
ID INT NOT NULL auto_increment
,DESCRICAO VARCHAR(200)
,VALOR DECIMAL(12,2)  
,DATA_RECEBIMENTO DATETIME DEFAULT CURRENT_TIMESTAMP
,PARCELA_RECEBER_ID INT 
,CONSTRAINT RECEBIMENTO_PK PRIMARY KEY (ID) 
,CONSTRAINT REC_PARREC_FK FOREIGN KEY (PARCELA_RECEBER_ID) REFERENCES PARCELA_RECEBER (ID)
);

CREATE TABLE CPAGAR (
ID INT NOT NULL auto_increment
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL 
,COMPRA_ID INT 
,FPAGAMENTO_ID INT NOT NULL 
,QTDE_PARC_PENDENTE INT
,CONSTRAINT CPAGAR_PK PRIMARY KEY (ID) 
,CONSTRAINT CPAG_COM_FK FOREIGN KEY (COMPRA_ID) REFERENCES COMPRA (ID)
,CONSTRAINT CPAG_FPAG_FK FOREIGN KEY (FPAGAMENTO_ID) REFERENCES FPAGAMENTO (ID)
);

CREATE TABLE PARCELA_PAGAR(
ID INT NOT NULL auto_increment
,VALOR DECIMAL(12,2) NOT NULL 
,QUITADO DECIMAL(12,2) DEFAULT 0
,JUROS DECIMAL(12,2) DEFAULT 0
,DESCONTO DECIMAL(12,2) DEFAULT 0
,VENCIMENTO DATETIME
,CPAGAR_ID INT 
,CONSTRAINT PARCELA_PAGAR_PK PRIMARY KEY (ID)
,CONSTRAINT PARPAGAR_CPAG_FK FOREIGN KEY (CPAGAR_ID) REFERENCES CPAGAR (ID)
);

CREATE TABLE PAGAMENTO (
ID INT NOT NULL auto_increment
,DESCRICAO VARCHAR(200)
,VALOR DECIMAL(12,2)  
,DATA_PAGAMENTO DATETIME DEFAULT CURRENT_TIMESTAMP
,PARCELA_PAGAR_ID INT 
,FORNECEDOR_ID INT  
,CONSTRAINT PAGAMENTO_PK PRIMARY KEY (ID) 
,CONSTRAINT PAG_PARPAG_FK FOREIGN KEY (PARCELA_PAGAR_ID) REFERENCES PARCELA_PAGAR (ID)
,CONSTRAINT PAG_FORN_FK FOREIGN KEY (FORNECEDOR_ID) REFERENCES FORNECEDOR (ID)
);

CREATE TABLE CAIXA (
ID INT NOT NULL auto_increment
,DATA_CADASTRO DATETIME DEFAULT CURRENT_TIMESTAMP 
,SALDO INT 
,STATUS CHAR NOT NULL 
,CONSTRAINT CAIXA_PK PRIMARY KEY (ID) 
,CONSTRAINT CAIXA_STATUS CHECK(STATUS IN('A','F'))
);

CREATE TABLE ICAIXA(
ID INT NOT NULL auto_increment
,DESCRICAO VARCHAR(100)
,NATUREZA CHAR NOT NULL 
,VALOR INT NOT NULL 
,HORA TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
,CAIXA_ID INT NOT NULL 
,RECEBIMENTO_ID INT 
,PAGAMENTO_ID INT 
,CONSTRAINT ICAIXA_PK PRIMARY KEY (ID) 
,CONSTRAINT ICX_CX_FK FOREIGN KEY (CAIXA_ID) REFERENCES CAIXA (ID)
,CONSTRAINT ICX_REC_FK FOREIGN KEY (RECEBIMENTO_ID) REFERENCES RECEBIMENTO (ID)
,CONSTRAINT ICX_PAG_FK FOREIGN KEY (PAGAMENTO_ID) REFERENCES PAGAMENTO (ID)
,CONSTRAINT ICX_NATUREZA CHECK (NATUREZA IN ('C','D'))
);