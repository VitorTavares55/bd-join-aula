O comando JOIN se trata de uma cláusula de manipulação de tabelas em SQL. Ela é utilizada como forma de buscar e 
relacionar os dados de duas tabelas, fornecendo um resultado que integra ambos. Como todo o banco de dados relacional, 
foi criado tendo como base a teoria matemática dos conjuntos e suas formas de relações. Dessa forma, o JOIN é entendido como 
uma maneira de tratar o relacionamento entre tabelas no momento de realizar sua apresentação por meio do SELECT, relacionando seus dados e 
fazendo a apresentação deles em uma nova tabela, que apresente os dados que são necessários, assim sendo desnecessário selecionar os dados das 
duas tabelas separadamente e depois uni-los.

Exemplo:

SELECT emprestimo.data_emprestimo, professor.nome FROM emprestimo INNER JOIN professor ON (emprestimo.id_professor = professor.id_professor);

 
Neste exemplo, um SELECT foi executado para buscar os dados da coluna data_emprestimo da tabela emprestimo e o nome da tabela professor, 
com o uso do INNER JOIN, definimos que queremos apresentar uma tabela que relacione os dados definidos na sequência especificada, ou seja, 
a data_emprestimo e o nome do professor. Com a explicação e o exemplo de consulta com JOIN, 
pode-se compreender que a forma mais fácil de identificar a necessidade de sua utilização e de seu funcionamento, 
é compreender a teoria da qual ele foi criado, qual o propósito para sua criação, 
como ele deve ser aplicado e porque ele pode permitir "atalhos" para consultas que seriam de alta complexidade. 
Assim sendo, aplicando este pensamento à necessidade, teriamos uma situação em que seria necessário apresentar uma nova tabela com valores específicos 
de outras duas tabelas relacionadas, ao invés de precisar seleciona-las separadamente ou criar uma tabela nova inteira só para apresentar essa relação, 
o comando JOIN nos permite gerar uma tabela de apresentação que une valores, 
poupando processamento desnecessário e assim otimizando o tempo de resposta do SGBD.
